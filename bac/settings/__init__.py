"""
Django settings for bac project.

Generated by 'django-admin startproject' using Django 2.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

from django.contrib.messages import constants as messages


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'de4sne#yt%ci6_q(euue2-qj8oy3kvx9h$b&@6!4@0e-+_2sp^'

# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'modeltranslation', # must be before django.contrib.admin and django-debug-toolbar
    'core.apps.CoreConfig',
    'profiles.apps.ProfilesConfig',
    'outings.apps.OutingsConfig',
    'contactpage.apps.ContactpageConfig',
    'activities.apps.ActivitiesConfig',
    'availabilities.apps.AvailabilitiesConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites', # needed by django.contrib.sitemaps. Installed at the same time I installed sitemap (April 2022). I now use it also to give domain names (in emails for ex) automatically according to the env (dev or prod)
    'django.contrib.sitemaps',
    'django.contrib.postgres', # needed for the unaccent and trigram lookups (to install postgre extensions : CREATE EXTENSION unaccent; and pg_trgm;)
    'django.contrib.gis',
    'phonenumber_field',
    'classytags',
    'debug_toolbar',
]

MIDDLEWARE = [
    'django.middleware.common.BrokenLinkEmailsMiddleware', # Allow MANAGERS to receive a report by email for each 404 error in production.
    'debug_toolbar.middleware.DebugToolbarMiddleware', # Debug toolbar
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bac.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
                #'django.template.context_processors.tz',
            ],
        },
    },
]

WSGI_APPLICATION = 'bac.wsgi.application'

# Sites django app (needed by sitemap django app. I now use it also to give domain names (in emails for ex) automatically according to the env (dev or prod))
SITE_ID = 1

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis', #'django.db.backends.postgresql',
        'NAME': 'bac',
        'USER': 'yann',
        'PASSWORD': '',
        'HOST': '',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en'

LANGUAGES = [
    ('en', 'English'),
    ('fr', 'French'),
    ('es', 'Spanish'),
    ('it', 'Italian'),
]


TIME_ZONE = 'Europe/Paris'

USE_I18N = True

USE_L10N = True # A priori à partir de Django 5.0, USE_L10N sera supprimé. Les dates et les nombres seront affichés par défaut en fonction de la langue active.

USE_TZ = True

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)


# Static and Media files
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
STATIC_ROOT = os.path.join(BASE_DIR, 'collected_static')

MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Email settings
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Overriding the message tags to have the boostrap class in "Alerts"
MESSAGE_TAGS = {
    messages.DEBUG: 'alert-secondary',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}

# Custom Django Authentification settings
AUTH_USER_MODEL = 'profiles.CustomUser'
LOGIN_URL = 'login'
# LOGIN_REDIRECT_URL = 'homepage' # if 'next' is defined in the request then it is used to redirect (https://docs.djangoproject.com/fr/2.2/topics/auth/default/#django.contrib.auth.views.LoginView)
LOGOUT_REDIRECT_URL = 'login'

# Customype of auto-created primary keys
DEFAULT_AUTO_FIELD = 'django.db.models.AutoField' # I set this setting because in the future (after Django 3.2) the default value will be BigAutoField and migrations will occur.

# Sessions settings
# SESSION_COOKIE_AGE = 1209600 # seconds -> 2 weeks (default value)

# Referrer policy
# https://docs.djangoproject.com/fr/4.0/releases/3.1/#security
# SECURE_REFERRER_POLICY = 'origin-when-cross-origin,strict-origin-when-cross-origin' # 'same-origin' by default. I wanted to set it to 'strict-origin-when-cross-origin' (the last value of the list is the one used) because on my development computer on Chromium there was a bug on the admin site on the display of the OSM maps (in profiles for exemple) : the tiles are not download because blocked by CORS policy set to same-origin with my website on http (and not https) because served by runserver. But in fact it works on the web because my website works with https. So I keep 'same-origin' which is safer and allow the CSRF protection of django to work well.

# Settings used by Django Debug Toolbar
INTERNAL_IPS = [
    '127.0.0.1',
]
DEBUG_TOOLBAR_CONFIG = {
    'SHOW_COLLAPSED': True,
}
